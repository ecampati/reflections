How did viewing a diff between two versions of a file help you see the bug that
was introduced?

diff helps me to find exacly the line of code with the bug!

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Yes, definitely!

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

The main pro using git is to have a more control on versions saved...

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

I think that git permits this because a version control system user generally needs to do it
because these files are related to each other.

How can you use the commands git log and git diff to view the history of files?

With 'git log' I can see the whole story of file, with 'git diff' I can see the
differences between two versions of it...

How might using version control make you more confident to make changes that
could break something?

Using a version control system I can always go back to a previous version, 
in order, for example, to find where a bug was introduced...

Now that you have your workspace set up, what do you want to try using Git for?
I want to continue to learn how best to use git!
;-)

Commands:
q 								                	| Exit git log!
git log  							              | List the commits and show which files have changed
git log --stat  					          | Show addition information about the commits
git diff id1 id2  					        | Compare two commits
git clone  							            | Create a local copy/clone from the repository
git config --global color.ui auto 	| Get colored diff output
git checkout 						            | Shows a previous version of the file. This is not a checkout to edit like in SVN or CVS.
