When would you want to create a remote repository rather than keeping 
all your work local? 
When I want to access to my work not only by my pc but also via web.
When I want to share my work with others (and maybe ask for a contribution
from others).

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
Developer must decide when to incorporate the changes on the remote repository 
on the local repository, based on what he is working on. 
Push and Pull oprations can not be managed automatically by an application.


Describe the differences between forks, clones, and branches.  When would you
use one instead of another?
Forks command works on GitHub environment: it clones an existing repository 
into your new repository.
Clone command make a copy of a remote repository to your local environment;
the copy contains all commmits of remote repository.
Branch command creates a new commit that inherits all previous commits.
I can use fork command when I want to clone an existing database on GitHub.
I can use clone command when I work locally on an existing remote repository.
I can use branch command when I want to create new feature/make a fix/etc 
mainteining the current version accessible in any moment. Later it will
possible to merge changes to the 'master' branch.


What is the benefit of having a copy of the last known state of the remote
stored locally?
The benefit is that you to be able to check your changes with respect to 
the sources stored on the remote repository even without having an Internet 
connection and without 'interferences' of someone working on the same repository.


How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?
Git and GitHub make collaboration much easier and more effective, providing 
the tools to manage the workflow of more people on the same project and 
to resolve any conflicts. 


When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

